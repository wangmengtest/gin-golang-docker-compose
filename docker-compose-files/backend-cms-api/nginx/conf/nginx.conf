user  www www;
worker_processes  auto;

pid        /var/run/nginx.pid;

events {
    use epoll ;
    worker_connections  4096;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_host on;
    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
    keepalive_timeout  65;
    server_names_hash_bucket_size 512 ;
    client_header_buffer_size 128k;
    large_client_header_buffers 8 64k;
    client_max_body_size 500m;

    log_format json '{"created_at":"$time_iso8601",'
                       '"remote_addr":"$remote_addr",'
                       '"method":"$request_method",'
                       '"request":"$request",'
                       '"status":"$status",'
                       '"size":$body_bytes_sent,'
                       '"referer": "$http_referer",'
                       '"http_host":"$http_host",'
                       '"response_time":$request_time,'
                       '"http_x_forwarded_for":"$http_x_forwarded_for",'
                       '"user_agent": "$http_user_agent"'
                '}'  ;

    access_log  /usr/local/nginx/logs/access.log json;
    error_log  /usr/local/nginx/logs/error.log;

    upstream  gs_admin2_cms_api_list {
    	# 设置负载均衡模式为ip算法模式，这样不同的客户端每次请求都会与第一次建立对话的后端服务器进行交互
    	ip_hash;
    	# 如果是域名访问的站点，nginx和go服务在同一台机器，
    	# 这里不要配置为 127.0.0.1:端口 ，会影响获取客户端ip的准确性
    	server  172.18.0.1:22002  ;
    	#server  127.0.0.1:22002  ;
    }

    server{
        listen 80;
        #  站点域名，没有的话，写项目名称即可
        #server_name     43.143.166.70;
        #server_name     43.143.166.70;
        charset         utf-8 ;
        #root   /usr/local/nginx/html;

    	location ~ / {
             # 静态资源、目录交给ngixn本身处理，动态路由请求执行后续的代理代码
             #try_files $uri $uri/  @ginskeleton_admin2;
             try_files /_not_exists_  @ginskeleton_admin2;
        }
        location / { # 访问 / 根下的所有路径，反向代理从80转到8084
            proxy_pass                 http://gs_admin2_cms_api_list/;  # 负载均衡组名
            proxy_redirect             off;
            proxy_set_header           Host             $host;
            proxy_set_header           X-Real-IP        $remote_addr;
            proxy_set_header           X-Forwarded-For
            $proxy_add_x_forwarded_for;
        }
    	location   @ginskeleton_admin2 {
		# 配置nginx直接拦截 options 请求，避免这种没有意义的请求继续转发给后端go服务，
		 if ($request_method = 'OPTIONS') {
				add_header    'Content-Type'  'text/plain, charset=utf-8' ;
				add_header    'Access-Control-Allow-Credentials'  'true' ;
				add_header    'Access-Control-Allow-Headers'	 'Access-Control-Allow-Headers,Authorization,User-Agent, Keep-Alive, Content-Type, X-Requested-With,X-CSRF-Token,AccessToken,Token' ;
				add_header    'Access-Control-Allow-Methods'	  'GET, POST, DELETE, PUT, PATCH, OPTIONS' ;
				add_header    'Access-Control-Allow-Origin'	  '*' ;
				add_header    'Access-Control-Expose-Headers'	 'Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type' ;
				add_header    'Content-Length'	 '0' ;
				return 204 ;
        }

        #将客户端的ip和头域信息一并转发到后端服务器
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # 转发Cookie，设置 SameSite
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";

        # 最后，执行代理访问真实服务器
        proxy_pass http://gs_admin2_cms_api_list;

    }

        # 提供 nginx 运行指标采集接口，供 prometheus 软件采集
        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

         # 以下是静态资源缓存配置
         location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
         {
             expires      30d;
         }

         location ~ .*\.(js|css)?$
         {
             expires      12h;
         }

         location ~ /\.
         {
             deny all;
         }
    }

}
